# Generated by Django 4.2 on 2023-05-02 22:10

from django.db import migrations, models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUserFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30)),
                ('gender', models.PositiveIntegerField(choices=[(1, 'Мужской'), (2, 'Женский')], null=True, verbose_name='Пол')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('affiliation', models.PositiveIntegerField(choices=[(1, 'Научное сообщество'), (2, 'Министерство'), (3, 'Организация')], null=True, verbose_name='Принадлежность')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region='RU')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('country', models.PositiveIntegerField(blank=True, choices=[(1, 'Абхазия'), (2, 'Австралия'), (3, 'Австрия'), (4, 'Азад-Кашмир'), (5, 'Азербайджан'), (6, 'Албания'), (7, 'Алжир'), (8, 'Ангилья'), (9, 'Ангола'), (10, 'Андорра'), (11, 'АнтигуаиБарбуда'), (12, 'Аргентина'), (13, 'Армения'), (14, 'Аруба'), (15, 'Афганистан'), (16, 'БагамскиеОстрова'), (17, 'Бангладеш'), (18, 'Барбадос'), (19, 'Бахрейн'), (20, 'Белиз'), (21, 'Белоруссия'), (22, 'Бельгия'), (23, 'Бенин'), (24, 'Болгария'), (25, 'Боливия'), (26, 'БоснияиГерцеговина'), (27, 'Ботсвана'), (28, 'Бразилия'), (29, 'Бруней'), (30, 'Буркина-Фасо'), (31, 'Бурунди'), (32, 'Бутан'), (33, 'Вануату'), (34, 'Ватикан'), (35, 'Великобритания'), (36, 'Венгрия'), (37, 'Венесуэла'), (38, 'ВосточныйТимор'), (39, 'Вьетнам'), (40, 'Габон'), (41, 'Гаити'), (42, 'Гайана'), (43, 'Гамбия'), (44, 'Гана'), (45, 'Гватемала'), (46, 'Гвинея'), (47, 'Гвинея-Бисау'), (48, 'Германия'), (49, 'Гондурас'), (50, 'Гонконг'), (51, 'ГосударствоПалестина'), (52, 'Гренада'), (53, 'Гренландия'), (54, 'Греция'), (55, 'Грузия'), (56, 'Дания'), (57, 'ДемократическаяРеспубликаКонго'), (58, 'Джибути'), (59, 'Доминика'), (60, 'ДоминиканскаяРеспублика'), (61, 'Египет'), (62, 'Замбия'), (63, 'Зимбабве'), (64, 'Израиль'), (65, 'Индия'), (66, 'Индонезия'), (67, 'Иордания'), (68, 'Ирак'), (69, 'Иран'), (70, 'Ирландия'), (71, 'Исландия'), (72, 'Испания'), (73, 'Италия'), (74, 'Йемен'), (75, 'Кабо-Верде'), (76, 'Казахстан'), (77, 'Камбоджа'), (78, 'Камерун'), (79, 'Канада'), (80, 'Катар'), (81, 'Кения'), (82, 'Кипр'), (83, 'Киргизия'), (84, 'Кирибати'), (85, 'Китай'), (86, 'КНДР(СевернаяКорея)'), (87, 'Колумбия'), (88, 'КоморскиеОстрова'), (89, 'Косово'), (90, 'Коста-Рика'), (91, 'Кот-д’Ивуар'), (92, 'Куба'), (93, 'Кувейт'), (94, 'Кюрасао'), (95, 'Лаос'), (96, 'Латвия'), (97, 'Лесото'), (98, 'Либерия'), (99, 'Ливан'), (100, 'Ливия'), (101, 'Литва'), (102, 'Лихтенштейн'), (103, 'Люксембург'), (104, 'Маврикий'), (105, 'Мавритания'), (106, 'Мадагаскар'), (107, 'Македония'), (108, 'Малави'), (109, 'Малайзия'), (110, 'Мали'), (111, 'Мальдивы'), (112, 'Мальта'), (113, 'Марокко'), (114, 'МаршалловыОстрова'), (115, 'Мексика'), (116, 'Микронезия'), (117, 'Мозамбик'), (118, 'Молдавия'), (119, 'Монако'), (120, 'Монголия'), (121, 'Мьянма'), (122, 'Нагорно-КарабахскаяРеспублика'), (123, 'Намибия'), (124, 'Науру'), (125, 'Непал'), (126, 'Нигер'), (127, 'Нигерия'), (128, 'Нидерланды'), (129, 'Никарагуа'), (130, 'Ниуэ'), (131, 'НоваяЗеландия'), (132, 'Норвегия'), (133, 'ОбъединённыеАрабскиеЭмираты'), (134, 'Оман'), (135, 'ОстроваКука'), (136, 'Пакистан'), (137, 'Палау'), (138, 'Панама'), (139, 'Папуа–НоваяГвинея'), (140, 'Парагвай'), (141, 'Перу'), (142, 'Польша'), (143, 'Португалия'), (144, 'Пуэрто-Рико'), (145, 'РеспубликаКонго'), (146, 'Россия'), (147, 'Руанда'), (148, 'Румыния'), (149, 'Сальвадор'), (150, 'Самоа'), (151, 'Сан-Марино'), (152, 'Сан-ТомеиПринсипи'), (153, 'СаудовскаяАравия'), (154, 'СахарскаяАрабскаяДемократическаяРеспублика'), (155, 'Свазиленд'), (156, 'СеверныйКипр'), (157, 'СейшельскиеОстрова'), (158, 'Сенегал'), (159, 'Сент-ВинсентиГренадины'), (160, 'Сент-КитсиНевис'), (161, 'Сент-Люсия'), (162, 'Сербия'), (163, 'Сингапур'), (164, 'Синт-Мартен'), (165, 'Сирия'), (166, 'Словакия'), (167, 'Словения'), (168, 'СоединённыеШтатыАмерики'), (169, 'СоломоновыОстрова'), (170, 'Сомали'), (171, 'Судан'), (172, 'Суринам'), (173, 'Сьерра-Леоне'), (174, 'Таджикистан'), (175, 'Таиланд'), (176, 'Танзания'), (177, 'Того'), (178, 'Тонга'), (179, 'ТринидадиТобаго'), (180, 'Тувалу'), (181, 'Тунис'), (182, 'Туркмения'), (183, 'Турция'), (184, 'Уганда'), (185, 'Узбекистан'), (186, 'Украина'), (187, 'Уругвай'), (188, 'Фареры'), (189, 'Фиджи'), (190, 'Филиппины'), (191, 'Финляндия'), (192, 'Франция'), (193, 'Хорватия'), (194, 'ЦентральноафриканскаяРеспублика'), (195, 'Чад'), (196, 'Черногория'), (197, 'Чехия'), (198, 'Чили'), (199, 'Швейцария'), (200, 'Швеция'), (201, 'Шри-Ланка'), (202, 'Эквадор'), (203, 'ЭкваториальнаяГвинея'), (204, 'Эритрея'), (205, 'Эстония'), (206, 'Эфиопия'), (207, 'ЮжнаяКорея'), (208, 'ЮжнаяОсетия'), (209, 'Южно-АфриканскаяРеспублика'), (210, 'ЮжныйСудан'), (211, 'Ямайка'), (212, 'Япония')], null=True, verbose_name='Страна')),
                ('region', models.PositiveIntegerField(blank=True, choices=[(1, 'Адыгея'), (2, 'Алтай'), (3, 'Алтайский край'), (4, 'Амурская область'), (5, 'Архангельская область'), (6, 'Астраханская область'), (7, 'Башкортостан'), (8, 'Белгородская область'), (9, 'Брянская область'), (10, 'Бурятия'), (11, 'Владимирская область'), (12, 'Волгоградская область'), (13, 'Вологодская область'), (14, 'Воронежская область'), (15, 'Дагестан'), (16, 'Еврейская автономная область'), (17, 'Забайкальский край'), (18, 'Ивановская область'), (19, 'Ингушетия'), (20, 'Иркутская область'), (21, 'Кабардино-Балкария'), (22, 'Калининградская область'), (23, 'Калмыкия'), (24, 'Калужская область'), (25, 'Камчатский край'), (26, 'Карачаево-Черкесия'), (27, 'Карелия'), (28, 'Кемеровская область'), (29, 'Кировская область'), (30, 'Коми'), (31, 'Костромская область'), (32, 'Краснодарский край'), (33, 'Красноярский край'), (34, 'Крым'), (35, 'Курганская область'), (36, 'Курская область'), (37, 'Ленинградская область'), (38, 'Липецкая область'), (39, 'Магаданская область'), (40, 'Марий Эл'), (41, 'Мордовия'), (42, 'Москва'), (43, 'Московская область'), (44, 'Мурманская область'), (45, 'Ненецкий автономный округ'), (46, 'Нижегородская область'), (47, 'Новгородская область'), (48, 'Новосибирская область'), (49, 'Омская область'), (50, 'Оренбургская область'), (51, 'Орловская область'), (52, 'Пензенская область'), (53, 'Пермский край'), (54, 'Приморский край'), (55, 'Псковская область'), (56, 'Ростовская область'), (57, 'Рязанская область'), (58, 'Самарская область'), (59, 'Санкт-Петербург'), (60, 'Саратовская область'), (61, 'Саха (Якутия)'), (62, 'Сахалинская область'), (63, 'Свердловская область'), (64, 'Севастополь'), (65, 'Северная Осетия - Алания'), (66, 'Смоленская область'), (67, 'Ставропольский край'), (68, 'Тамбовская область'), (69, 'Татарстан'), (70, 'Тверская область'), (71, 'Томская область'), (72, 'Тульская область'), (73, 'Тыва'), (74, 'Тюменская область'), (75, 'Удмуртия'), (76, 'Ульяновская область'), (77, 'Хабаровский край'), (78, 'Хакасия'), (79, 'Ханты-Мансийский автономный округ – Югра'), (80, 'Челябинская область'), (81, 'Чечня'), (82, 'Чувашия'), (83, 'Чукотский автономный округ'), (84, 'Ямало-Ненецкий автономный округ'), (85, 'Ярославская область')], null=True, verbose_name='Регион')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Новый профиль пользователя',
                'verbose_name_plural': 'Новые профили пользователей',
                'abstract': False,
            },
        ),
    ]
